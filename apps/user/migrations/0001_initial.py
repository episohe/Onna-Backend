# Generated by Django 4.1 on 2022-11-07 10:14

from django.db import migrations, models
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('name', models.CharField(max_length=20, verbose_name='이름')),
                ('phone', models.CharField(max_length=30, unique=True, verbose_name='연락처')),
                ('organization', models.CharField(max_length=50, verbose_name='소속')),
                ('role', models.CharField(max_length=30, verbose_name='직급/직책')),
                ('is_active', models.BooleanField(default=True, verbose_name='')),
                ('is_admin', models.BooleanField(default=False, verbose_name='이름')),
                ('permission', models.CharField(choices=[('Subscriber', '구독자'), ('User', '일반 사용자')], default='User', max_length=10, verbose_name='권한')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
    ]
